// <auto-generated />
using System;
using Final_Project.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Final_Project.Migrations
{
    [DbContext(typeof(RestaurantContext))]
    [Migration("20250516033804_seed")]
    partial class seed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Final_Project.Models.Branch", b =>
                {
                    b.Property<int>("BranchID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BranchID"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("ManagerID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("BranchID");

                    b.ToTable("Branches");

                    b.HasData(
                        new
                        {
                            BranchID = 1,
                            Address = "123 Main St",
                            ContactNumber = "555-0101",
                            ManagerID = 1,
                            Name = "Downtown Branch"
                        },
                        new
                        {
                            BranchID = 2,
                            Address = "456 Oak Ave",
                            ContactNumber = "555-0102",
                            ManagerID = 2,
                            Name = "Uptown Branch"
                        },
                        new
                        {
                            BranchID = 3,
                            Address = "789 Beach Rd",
                            ContactNumber = "555-0103",
                            ManagerID = 3,
                            Name = "Seaside Branch"
                        },
                        new
                        {
                            BranchID = 4,
                            Address = "101 Central Sq",
                            ContactNumber = "555-0104",
                            ManagerID = 4,
                            Name = "City Center Branch"
                        },
                        new
                        {
                            BranchID = 5,
                            Address = "202 Mall St",
                            ContactNumber = "555-0105",
                            ManagerID = 5,
                            Name = "Mall Branch"
                        });
                });

            modelBuilder.Entity("Final_Project.Models.Customer", b =>
                {
                    b.Property<int>("CustomerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerID"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CustomerID");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerID = 1,
                            Address = "321 Elm St",
                            ContactNumber = "555-0123",
                            Email = "john.doe@example.com",
                            Name = "John Doe"
                        },
                        new
                        {
                            CustomerID = 2,
                            Address = "654 Pine St",
                            ContactNumber = "555-0124",
                            Email = "jane.smith@example.com",
                            Name = "Jane Smith"
                        },
                        new
                        {
                            CustomerID = 3,
                            Address = "987 Cedar St",
                            ContactNumber = "555-0125",
                            Email = "ahmed.ali@example.com",
                            Name = "Ahmed Ali"
                        },
                        new
                        {
                            CustomerID = 4,
                            Address = "147 Maple St",
                            ContactNumber = "555-0126",
                            Email = "sara.hassan@example.com",
                            Name = "Sara Hassan"
                        },
                        new
                        {
                            CustomerID = 5,
                            Address = "258 Oak St",
                            ContactNumber = "555-0127",
                            Email = "omar.khaled@example.com",
                            Name = "Omar Khaled"
                        });
                });

            modelBuilder.Entity("Final_Project.Models.FoodCategory", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryID"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CategoryID");

                    b.ToTable("FoodCategories");

                    b.HasData(
                        new
                        {
                            CategoryID = 1,
                            CategoryName = "Appetizers"
                        },
                        new
                        {
                            CategoryID = 2,
                            CategoryName = "Main Course"
                        },
                        new
                        {
                            CategoryID = 3,
                            CategoryName = "Desserts"
                        },
                        new
                        {
                            CategoryID = 4,
                            CategoryName = "Beverages"
                        },
                        new
                        {
                            CategoryID = 5,
                            CategoryName = "Salads"
                        });
                });

            modelBuilder.Entity("Final_Project.Models.FoodItem", b =>
                {
                    b.Property<int>("FoodItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FoodItemID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("FoodCategoryID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("FoodItemID");

                    b.HasIndex("FoodCategoryID");

                    b.ToTable("FoodItems");

                    b.HasData(
                        new
                        {
                            FoodItemID = 1,
                            Description = "Crispy vegetable rolls",
                            FoodCategoryID = 1,
                            Name = "Spring Rolls",
                            Price = 5.99m
                        },
                        new
                        {
                            FoodItemID = 2,
                            Description = "Juicy grilled chicken breast",
                            FoodCategoryID = 2,
                            Name = "Grilled Chicken",
                            Price = 12.99m
                        },
                        new
                        {
                            FoodItemID = 3,
                            Description = "Rich chocolate cake",
                            FoodCategoryID = 3,
                            Name = "Chocolate Cake",
                            Price = 4.99m
                        },
                        new
                        {
                            FoodItemID = 4,
                            Description = "Chilled coffee with milk",
                            FoodCategoryID = 4,
                            Name = "Iced Coffee",
                            Price = 3.99m
                        },
                        new
                        {
                            FoodItemID = 5,
                            Description = "Fresh salad with Caesar dressing",
                            FoodCategoryID = 5,
                            Name = "Caesar Salad",
                            Price = 6.99m
                        });
                });

            modelBuilder.Entity("Final_Project.Models.Ingredient", b =>
                {
                    b.Property<int>("IngredientID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IngredientID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Quantity")
                        .HasMaxLength(20)
                        .HasColumnType("int");

                    b.HasKey("IngredientID");

                    b.ToTable("Ingredients");

                    b.HasData(
                        new
                        {
                            IngredientID = 1,
                            Name = "Chicken",
                            Quantity = 50
                        },
                        new
                        {
                            IngredientID = 2,
                            Name = "Flour",
                            Quantity = 100
                        },
                        new
                        {
                            IngredientID = 3,
                            Name = "Chocolate",
                            Quantity = 20
                        },
                        new
                        {
                            IngredientID = 4,
                            Name = "Tomato",
                            Quantity = 30
                        },
                        new
                        {
                            IngredientID = 5,
                            Name = "Lettuce",
                            Quantity = 40
                        });
                });

            modelBuilder.Entity("Final_Project.Models.Nutrition", b =>
                {
                    b.Property<int>("NutritionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NutritionID"));

                    b.Property<int>("Calories")
                        .HasColumnType("int");

                    b.Property<decimal>("Carbohydrates")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Fat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Fiber")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("FoodItemID")
                        .HasColumnType("int");

                    b.Property<decimal>("Protein")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Sugar")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("NutritionID");

                    b.HasIndex("FoodItemID")
                        .IsUnique();

                    b.ToTable("Nutritions");

                    b.HasData(
                        new
                        {
                            NutritionID = 1,
                            Calories = 200,
                            Carbohydrates = 30m,
                            Fat = 10m,
                            Fiber = 2m,
                            FoodItemID = 1,
                            Protein = 5m,
                            Sugar = 5m
                        },
                        new
                        {
                            NutritionID = 2,
                            Calories = 300,
                            Carbohydrates = 10m,
                            Fat = 15m,
                            Fiber = 1m,
                            FoodItemID = 2,
                            Protein = 25m,
                            Sugar = 2m
                        },
                        new
                        {
                            NutritionID = 3,
                            Calories = 400,
                            Carbohydrates = 50m,
                            Fat = 20m,
                            Fiber = 3m,
                            FoodItemID = 3,
                            Protein = 5m,
                            Sugar = 30m
                        },
                        new
                        {
                            NutritionID = 4,
                            Calories = 150,
                            Carbohydrates = 20m,
                            Fat = 5m,
                            Fiber = 0m,
                            FoodItemID = 4,
                            Protein = 3m,
                            Sugar = 15m
                        },
                        new
                        {
                            NutritionID = 5,
                            Calories = 180,
                            Carbohydrates = 15m,
                            Fat = 8m,
                            Fiber = 4m,
                            FoodItemID = 5,
                            Protein = 6m,
                            Sugar = 3m
                        });
                });

            modelBuilder.Entity("Final_Project.Models.Order", b =>
                {
                    b.Property<int>("OrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderID"));

                    b.Property<int>("BranchID")
                        .HasColumnType("int");

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("TableID")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("OrderID");

                    b.HasIndex("BranchID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("TableID");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            OrderID = 1,
                            BranchID = 1,
                            CustomerID = 1,
                            OrderTime = new DateTime(2025, 5, 16, 6, 37, 58, 340, DateTimeKind.Local).AddTicks(2163),
                            PaymentMethod = "Credit Card",
                            Status = "Completed",
                            TableID = 1,
                            TotalAmount = 18.98m
                        },
                        new
                        {
                            OrderID = 2,
                            BranchID = 2,
                            CustomerID = 2,
                            OrderTime = new DateTime(2025, 5, 16, 6, 37, 58, 340, DateTimeKind.Local).AddTicks(2174),
                            PaymentMethod = "Cash",
                            Status = "Pending",
                            TableID = 3,
                            TotalAmount = 17.98m
                        },
                        new
                        {
                            OrderID = 3,
                            BranchID = 3,
                            CustomerID = 3,
                            OrderTime = new DateTime(2025, 5, 16, 6, 37, 58, 340, DateTimeKind.Local).AddTicks(2180),
                            PaymentMethod = "Credit Card",
                            Status = "Completed",
                            TotalAmount = 10.98m
                        },
                        new
                        {
                            OrderID = 4,
                            BranchID = 4,
                            CustomerID = 4,
                            OrderTime = new DateTime(2025, 5, 16, 6, 37, 58, 340, DateTimeKind.Local).AddTicks(2187),
                            PaymentMethod = "Cash",
                            Status = "Cancelled",
                            TableID = 4,
                            TotalAmount = 25.97m
                        },
                        new
                        {
                            OrderID = 5,
                            BranchID = 5,
                            CustomerID = 5,
                            OrderTime = new DateTime(2025, 5, 16, 6, 37, 58, 340, DateTimeKind.Local).AddTicks(2193),
                            PaymentMethod = "Credit Card",
                            Status = "Completed",
                            TableID = 5,
                            TotalAmount = 13.98m
                        });
                });

            modelBuilder.Entity("Final_Project.Models.OrderItem", b =>
                {
                    b.Property<int>("OrderItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderItemID"));

                    b.Property<int>("FoodItemID")
                        .HasColumnType("int");

                    b.Property<int>("OrderID")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrderItemID");

                    b.HasIndex("FoodItemID");

                    b.HasIndex("OrderID");

                    b.ToTable("OrderItems");

                    b.HasData(
                        new
                        {
                            OrderItemID = 1,
                            FoodItemID = 1,
                            OrderID = 1,
                            Price = 5.99m,
                            Quantity = 2
                        },
                        new
                        {
                            OrderItemID = 2,
                            FoodItemID = 2,
                            OrderID = 1,
                            Price = 12.99m,
                            Quantity = 1
                        },
                        new
                        {
                            OrderItemID = 3,
                            FoodItemID = 3,
                            OrderID = 2,
                            Price = 4.99m,
                            Quantity = 2
                        },
                        new
                        {
                            OrderItemID = 4,
                            FoodItemID = 4,
                            OrderID = 3,
                            Price = 3.99m,
                            Quantity = 3
                        },
                        new
                        {
                            OrderItemID = 5,
                            FoodItemID = 5,
                            OrderID = 4,
                            Price = 6.99m,
                            Quantity = 1
                        });
                });

            modelBuilder.Entity("Final_Project.Models.Payment", b =>
                {
                    b.Property<int>("PaymentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentID"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("OrderID")
                        .HasColumnType("int");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("PaymentTime")
                        .HasColumnType("datetime2");

                    b.HasKey("PaymentID");

                    b.HasIndex("OrderID");

                    b.ToTable("Payments");

                    b.HasData(
                        new
                        {
                            PaymentID = 1,
                            Amount = 18.98m,
                            OrderID = 1,
                            PaymentMethod = "Credit Card",
                            PaymentTime = new DateTime(2025, 5, 16, 6, 37, 58, 340, DateTimeKind.Local).AddTicks(2574)
                        },
                        new
                        {
                            PaymentID = 2,
                            Amount = 17.98m,
                            OrderID = 2,
                            PaymentMethod = "Cash",
                            PaymentTime = new DateTime(2025, 5, 16, 6, 37, 58, 340, DateTimeKind.Local).AddTicks(2584)
                        },
                        new
                        {
                            PaymentID = 3,
                            Amount = 10.98m,
                            OrderID = 3,
                            PaymentMethod = "Credit Card",
                            PaymentTime = new DateTime(2025, 5, 16, 6, 37, 58, 340, DateTimeKind.Local).AddTicks(2592)
                        },
                        new
                        {
                            PaymentID = 4,
                            Amount = 25.97m,
                            OrderID = 4,
                            PaymentMethod = "Cash",
                            PaymentTime = new DateTime(2025, 5, 16, 6, 37, 58, 340, DateTimeKind.Local).AddTicks(2599)
                        },
                        new
                        {
                            PaymentID = 5,
                            Amount = 13.98m,
                            OrderID = 5,
                            PaymentMethod = "Credit Card",
                            PaymentTime = new DateTime(2025, 5, 16, 6, 37, 58, 340, DateTimeKind.Local).AddTicks(2604)
                        });
                });

            modelBuilder.Entity("Final_Project.Models.Profile", b =>
                {
                    b.Property<int>("ProfileID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProfileID"));

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("ProfilePictureUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("ReceivePromotions")
                        .HasColumnType("bit");

                    b.Property<DateTime>("RegisteredDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ProfileID");

                    b.HasIndex("CustomerID")
                        .IsUnique();

                    b.ToTable("Profiles");

                    b.HasData(
                        new
                        {
                            ProfileID = 1,
                            CustomerID = 1,
                            DateOfBirth = new DateTime(1990, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Gender = "Male",
                            ProfilePictureUrl = "john.jpg",
                            ReceivePromotions = true,
                            RegisteredDate = new DateTime(2025, 5, 16, 6, 37, 58, 340, DateTimeKind.Local).AddTicks(1588)
                        },
                        new
                        {
                            ProfileID = 2,
                            CustomerID = 2,
                            DateOfBirth = new DateTime(1985, 8, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Gender = "Female",
                            ProfilePictureUrl = "jane.jpg",
                            ReceivePromotions = false,
                            RegisteredDate = new DateTime(2025, 5, 16, 6, 37, 58, 340, DateTimeKind.Local).AddTicks(1697)
                        },
                        new
                        {
                            ProfileID = 3,
                            CustomerID = 3,
                            DateOfBirth = new DateTime(1992, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Gender = "Male",
                            ReceivePromotions = true,
                            RegisteredDate = new DateTime(2025, 5, 16, 6, 37, 58, 340, DateTimeKind.Local).AddTicks(1706)
                        },
                        new
                        {
                            ProfileID = 4,
                            CustomerID = 4,
                            DateOfBirth = new DateTime(1995, 11, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Gender = "Female",
                            ProfilePictureUrl = "sara.jpg",
                            ReceivePromotions = true,
                            RegisteredDate = new DateTime(2025, 5, 16, 6, 37, 58, 340, DateTimeKind.Local).AddTicks(1712)
                        },
                        new
                        {
                            ProfileID = 5,
                            CustomerID = 5,
                            DateOfBirth = new DateTime(1988, 7, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Gender = "Male",
                            ReceivePromotions = false,
                            RegisteredDate = new DateTime(2025, 5, 16, 6, 37, 58, 340, DateTimeKind.Local).AddTicks(1834)
                        });
                });

            modelBuilder.Entity("Final_Project.Models.Recipe", b =>
                {
                    b.Property<int>("RecipeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecipeID"));

                    b.Property<int>("FoodItemID")
                        .HasColumnType("int");

                    b.Property<int>("IngredientID")
                        .HasColumnType("int");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("RecipeID");

                    b.HasIndex("FoodItemID");

                    b.HasIndex("IngredientID");

                    b.ToTable("Recipes");

                    b.HasData(
                        new
                        {
                            RecipeID = 1,
                            FoodItemID = 1,
                            IngredientID = 2,
                            Quantity = 0.1m
                        },
                        new
                        {
                            RecipeID = 2,
                            FoodItemID = 2,
                            IngredientID = 1,
                            Quantity = 0.2m
                        },
                        new
                        {
                            RecipeID = 3,
                            FoodItemID = 3,
                            IngredientID = 3,
                            Quantity = 0.15m
                        },
                        new
                        {
                            RecipeID = 4,
                            FoodItemID = 4,
                            IngredientID = 4,
                            Quantity = 0.05m
                        },
                        new
                        {
                            RecipeID = 5,
                            FoodItemID = 5,
                            IngredientID = 5,
                            Quantity = 0.3m
                        });
                });

            modelBuilder.Entity("Final_Project.Models.Reservation", b =>
                {
                    b.Property<int>("ReservationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReservationID"));

                    b.Property<int>("BranchID")
                        .HasColumnType("int");

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfGuests")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReservationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ReservationID");

                    b.HasIndex("BranchID");

                    b.HasIndex("CustomerID");

                    b.ToTable("Reservations");

                    b.HasData(
                        new
                        {
                            ReservationID = 1,
                            BranchID = 1,
                            CustomerID = 1,
                            NumberOfGuests = 4,
                            ReservationTime = new DateTime(2025, 5, 17, 6, 37, 58, 340, DateTimeKind.Local).AddTicks(1940),
                            Status = "Confirmed"
                        },
                        new
                        {
                            ReservationID = 2,
                            BranchID = 2,
                            CustomerID = 2,
                            NumberOfGuests = 6,
                            ReservationTime = new DateTime(2025, 5, 18, 6, 37, 58, 340, DateTimeKind.Local).AddTicks(1953),
                            Status = "Pending"
                        },
                        new
                        {
                            ReservationID = 3,
                            BranchID = 3,
                            CustomerID = 3,
                            NumberOfGuests = 2,
                            ReservationTime = new DateTime(2025, 5, 19, 6, 37, 58, 340, DateTimeKind.Local).AddTicks(1959),
                            Status = "Confirmed"
                        },
                        new
                        {
                            ReservationID = 4,
                            BranchID = 4,
                            CustomerID = 4,
                            NumberOfGuests = 8,
                            ReservationTime = new DateTime(2025, 5, 20, 6, 37, 58, 340, DateTimeKind.Local).AddTicks(1965),
                            Status = "Cancelled"
                        },
                        new
                        {
                            ReservationID = 5,
                            BranchID = 5,
                            CustomerID = 5,
                            NumberOfGuests = 4,
                            ReservationTime = new DateTime(2025, 5, 21, 6, 37, 58, 340, DateTimeKind.Local).AddTicks(1970),
                            Status = "Confirmed"
                        });
                });

            modelBuilder.Entity("Final_Project.Models.Role", b =>
                {
                    b.Property<int>("RoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleID"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RoleID");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleID = 1,
                            RoleName = "Manager"
                        },
                        new
                        {
                            RoleID = 2,
                            RoleName = "Waiter"
                        },
                        new
                        {
                            RoleID = 3,
                            RoleName = "Chef"
                        },
                        new
                        {
                            RoleID = 4,
                            RoleName = "Cashier"
                        },
                        new
                        {
                            RoleID = 5,
                            RoleName = "Host"
                        });
                });

            modelBuilder.Entity("Final_Project.Models.Staff", b =>
                {
                    b.Property<int>("StaffID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StaffID"));

                    b.Property<int>("BranchID")
                        .HasColumnType("int");

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("RoleID")
                        .HasColumnType("int");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("StaffID");

                    b.HasIndex("BranchID");

                    b.HasIndex("RoleID");

                    b.ToTable("Staff");

                    b.HasData(
                        new
                        {
                            StaffID = 1,
                            BranchID = 1,
                            ContactNumber = "555-0201",
                            Name = "Alice Johnson",
                            RoleID = 1,
                            Salary = 5000m
                        },
                        new
                        {
                            StaffID = 2,
                            BranchID = 2,
                            ContactNumber = "555-0202",
                            Name = "Bob Williams",
                            RoleID = 1,
                            Salary = 5200m
                        },
                        new
                        {
                            StaffID = 3,
                            BranchID = 3,
                            ContactNumber = "555-0203",
                            Name = "Clara Lee",
                            RoleID = 1,
                            Salary = 5100m
                        },
                        new
                        {
                            StaffID = 4,
                            BranchID = 4,
                            ContactNumber = "555-0204",
                            Name = "David Kim",
                            RoleID = 1,
                            Salary = 5300m
                        },
                        new
                        {
                            StaffID = 5,
                            BranchID = 5,
                            ContactNumber = "555-0205",
                            Name = "Emma Brown",
                            RoleID = 1,
                            Salary = 5400m
                        });
                });

            modelBuilder.Entity("Final_Project.Models.Table", b =>
                {
                    b.Property<int>("TableID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TableID"));

                    b.Property<int>("BranchID")
                        .HasColumnType("int");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("TableID");

                    b.HasIndex("BranchID");

                    b.ToTable("Tables");

                    b.HasData(
                        new
                        {
                            TableID = 1,
                            BranchID = 1,
                            Capacity = 4,
                            Location = "Indoor",
                            Status = "Available"
                        },
                        new
                        {
                            TableID = 2,
                            BranchID = 1,
                            Capacity = 6,
                            Location = "Outdoor",
                            Status = "Available"
                        },
                        new
                        {
                            TableID = 3,
                            BranchID = 2,
                            Capacity = 2,
                            Location = "Indoor",
                            Status = "Occupied"
                        },
                        new
                        {
                            TableID = 4,
                            BranchID = 3,
                            Capacity = 8,
                            Location = "Terrace",
                            Status = "Available"
                        },
                        new
                        {
                            TableID = 5,
                            BranchID = 4,
                            Capacity = 4,
                            Location = "Indoor",
                            Status = "Reserved"
                        });
                });

            modelBuilder.Entity("Final_Project.Models.FoodItem", b =>
                {
                    b.HasOne("Final_Project.Models.FoodCategory", "FoodCategory")
                        .WithMany("FoodItems")
                        .HasForeignKey("FoodCategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FoodCategory");
                });

            modelBuilder.Entity("Final_Project.Models.Nutrition", b =>
                {
                    b.HasOne("Final_Project.Models.FoodItem", "FoodItem")
                        .WithOne("Nutrition")
                        .HasForeignKey("Final_Project.Models.Nutrition", "FoodItemID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FoodItem");
                });

            modelBuilder.Entity("Final_Project.Models.Order", b =>
                {
                    b.HasOne("Final_Project.Models.Branch", "Branch")
                        .WithMany("Orders")
                        .HasForeignKey("BranchID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Final_Project.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Final_Project.Models.Table", "Table")
                        .WithMany()
                        .HasForeignKey("TableID");

                    b.Navigation("Branch");

                    b.Navigation("Customer");

                    b.Navigation("Table");
                });

            modelBuilder.Entity("Final_Project.Models.OrderItem", b =>
                {
                    b.HasOne("Final_Project.Models.FoodItem", "FoodItem")
                        .WithMany("OrderItems")
                        .HasForeignKey("FoodItemID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Final_Project.Models.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FoodItem");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Final_Project.Models.Payment", b =>
                {
                    b.HasOne("Final_Project.Models.Order", "Order")
                        .WithMany("Payments")
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Final_Project.Models.Profile", b =>
                {
                    b.HasOne("Final_Project.Models.Customer", "Customer")
                        .WithOne("Profile")
                        .HasForeignKey("Final_Project.Models.Profile", "CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Final_Project.Models.Recipe", b =>
                {
                    b.HasOne("Final_Project.Models.FoodItem", "FoodItem")
                        .WithMany("Recipes")
                        .HasForeignKey("FoodItemID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Final_Project.Models.Ingredient", "Ingredient")
                        .WithMany("Recipes")
                        .HasForeignKey("IngredientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FoodItem");

                    b.Navigation("Ingredient");
                });

            modelBuilder.Entity("Final_Project.Models.Reservation", b =>
                {
                    b.HasOne("Final_Project.Models.Branch", "Branch")
                        .WithMany("Reservations")
                        .HasForeignKey("BranchID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Final_Project.Models.Customer", "Customer")
                        .WithMany("Reservations")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Final_Project.Models.Staff", b =>
                {
                    b.HasOne("Final_Project.Models.Branch", "Branch")
                        .WithMany("Staff")
                        .HasForeignKey("BranchID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Final_Project.Models.Role", "Role")
                        .WithMany("Staff")
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Final_Project.Models.Table", b =>
                {
                    b.HasOne("Final_Project.Models.Branch", "Branch")
                        .WithMany("Tables")
                        .HasForeignKey("BranchID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("Final_Project.Models.Branch", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("Reservations");

                    b.Navigation("Staff");

                    b.Navigation("Tables");
                });

            modelBuilder.Entity("Final_Project.Models.Customer", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("Profile")
                        .IsRequired();

                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("Final_Project.Models.FoodCategory", b =>
                {
                    b.Navigation("FoodItems");
                });

            modelBuilder.Entity("Final_Project.Models.FoodItem", b =>
                {
                    b.Navigation("Nutrition")
                        .IsRequired();

                    b.Navigation("OrderItems");

                    b.Navigation("Recipes");
                });

            modelBuilder.Entity("Final_Project.Models.Ingredient", b =>
                {
                    b.Navigation("Recipes");
                });

            modelBuilder.Entity("Final_Project.Models.Order", b =>
                {
                    b.Navigation("OrderItems");

                    b.Navigation("Payments");
                });

            modelBuilder.Entity("Final_Project.Models.Role", b =>
                {
                    b.Navigation("Staff");
                });
#pragma warning restore 612, 618
        }
    }
}
